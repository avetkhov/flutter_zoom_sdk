group 'com.rentready.flutter_zoom_sdk'
version '1.0'

buildscript {
    ext.zoomSdkVersion = '5.17.10.20175'
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.rentready.flutter_zoom_sdk'
    }

    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 19
        consumerProguardFiles 'proguard-rules.pro'
    }

    dependencies {
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.mockito:mockito-core:5.0.0'
    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}

dependencies {
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    implementation 'com.google.crypto.tink:tink-android:1.12.0'
    implementation 'com.google.android.exoplayer:exoplayer-core:2.19.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.github.bumptech.glide:annotations:4.16.0'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.airbnb.android:lottie:6.3.0'
    implementation 'androidx.window:window:1.1.0'
    implementation 'androidx.window:window-java:1.1.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.22'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    implementation "us.zoom.sdk:mobilertc:$zoomSdkVersion"
}

publishing {
    publications {
        mobilertc(MavenPublication) {
            groupId = 'us.zoom.sdk'
            artifactId = 'mobilertc'
            version = zoomSdkVersion
            artifact file("$projectDir/libs/mobilertc.aar")
        }
    }
    
    repositories {
        mavenLocal()
    }
}

tasks.register('downloadZoomSdk', Copy) {
    def zipFileName = "zoom-sdk-android-${zoomSdkVersion}.zip"
    def url = "https://zoommeetingsdk.blob.core.windows.net/android/${zipFileName}"

    def libsDir = file('libs')
    def zipFile = file("${libsDir}/${zipFileName}")

    into(libsDir) {
        include '*.aar'
        eachFile { file -> file.delete() }
    }
    if (!zipFile.exists()) {
        libsDir.mkdirs()

        zipFile.withOutputStream { outputStream ->
            new URL(url).withInputStream { inputStream ->
                outputStream << inputStream
            }
        }
    }

    from(zipTree(zipFile)) {
        include '**/*.aar'
        eachFile { file -> file.path = file.name }
    }
    into libsDir
    includeEmptyDirs false
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

publishMobilertcPublicationToMavenLocalRepository.dependsOn(downloadZoomSdk)
preBuild.dependsOn(publish)
